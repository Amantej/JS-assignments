Datatypes in JS:
There are six basic data types in JavaScript which can be divided into three main categories:
primitive (or primary), composite (or reference), and special data types. String, Number, and Boolean are primitive data types.
Object, Array, and Function (which are all types of objects) are composite data types.
Whereas Undefined and Null are special data types.
1. string:
The string data type is used to represent textual data (i.e. sequences of characters).
Strings are created using single or double quotes surrounding one or more characters, as shown below:
Example:
var a = 'Hi there!';  // using single quotes
var b = "Hi there!";  // using double quotes
You can include quotes inside the string as long as they don't match the enclosing quotes.
2. Number:
The number data type is used to represent positive or negative numbers with or without decimal place,
or numbers written using exponential notation e.g. 1.5e-4 (equivalent to 1.5x10-4).
Example:
var a = 25;         // integer
var b = 80.5;       // floating-point number
var c = 4.25e+6;    // exponential notation, same as 4.25e6 or 4250000
var d = 4.25e-6;    // exponential notation, same as 0.00000425
The Number data type also includes some special values which are: Infinity, -Infinity and NaN. Infinity represents the mathematical Infinity âˆž,
which is greater than any number. Infinity is the result of dividing a nonzero number by 0.
3. Boolean:
The Boolean data type can hold only two values: true or false. It is typically used to store values like yes (true) or no (false),
on (true) or off (false), etc. as demonstrated below:
Example:
var isReading = true;   // yes, I'm reading
var isSleeping = false; // no, I'm not sleeping
Boolean values also come as a result of comparisons in a program.
4. Undefined
The undefined data type can only have one value-the special value undefined. If a variable has been declared,
but has not been assigned a value, has the value undefined.
Example:
var a;
var b = "Hello World!"
 
alert(a) // Output: undefined
alert(b) // Output: Hello World
5. Null:
This is another special data type that can have only one value-the null value. A null value means that there is no value.
It is not equivalent to an empty string ("") or 0, it is simply nothing.
A variable can be explicitly emptied of its current contents by assigning it the null value.
Example:
var a = null;
alert(a); // Output: null
 
var b = "Hello World!"
alert(b); // Output: Hello World!
 
b = null;
alert(b) // Output: null
6. Object:
The object is a complex data type that allows you to store collections of data.

An object contains properties, defined as a key-value pair. A property key (name) is always a string, but the value can be any data type, like strings, numbers, booleans, or complex data types like arrays,
function and other objects. You'll learn more about objects in upcoming chapters.
The following example will show you the simplest way to create an object in JavaScript.
Example:
var emptyObject = {};
var person = {"name": "Clark", "surname": "Kent", "age": "36"};
 
// For better reading
var car = {
    "modal": "BMW X3",
    "color": "white",
    "doors": 5
}